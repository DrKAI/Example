{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "02-8 자료형의 값을 저장하는 공간, 변수.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/DrKAI/Example/blob/master/02-8%20%EC%9E%90%EB%A3%8C%ED%98%95%EC%9D%98%20%EA%B0%92%EC%9D%84%20%EC%A0%80%EC%9E%A5%ED%95%98%EB%8A%94%20%EA%B3%B5%EA%B0%84,%20%EB%B3%80%EC%88%98.ipynb%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "metadata": {
        "id": "b34FBc-PMWTN",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "# 변수는 어떻게 만들까?"
      ]
    },
    {
      "metadata": {
        "id": "rQ7Ynx2eMgg7",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "a = 1\n",
        "b = \"python\"\n",
        "c = [1, 2, 3]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "_Td9TW4JMgjl",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "우리는 이미 앞에서부터 변수를 사용해왔다. 위의 a, b, c를 변수라 한다.\n",
        "\n",
        "변수를 만들 때, **= (assignment)** 기호를 사용한다. C나 Java처럼 변수의 자료형까지 함께 쓸 필요는 없다. 파이썬은 스스로 판단한다.\n",
        "\n",
        "**변수명 = 변수에 저장할 값**"
      ]
    },
    {
      "metadata": {
        "id": "iljpv7lGMgl9",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "# 변수란?\n",
        "\n",
        "파이썬에서 하용하는 변수는 객체를 가리키는 것이라고도 할 수 있다. 객체란 우리가 지금껏 보아왔던 자료형과 같은 것을 의미한다.\n",
        "\n",
        "클래스 챕터에서 자세하게 공부합시다."
      ]
    },
    {
      "metadata": {
        "id": "zepesWG8Mgod",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "a = [1, 2, 3]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "-0IM4NnKMgq8",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "[1, 2, 3]이라는 값을 가지는 리스트 자료형(객체)이 자동으로 메모리에 생성되고, 변수 a는 [1, 2, 3] 리스트가 저장된 메모리의 주소를 가리키게 된다.\n",
        "\n",
        "a 변수가 가리키는 메모리의 주소는 아래의 예시를 보라."
      ]
    },
    {
      "metadata": {
        "id": "5kz2el3-MgtZ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "06c713b1-3f49-4c5e-a2e2-c6e7d6dcb354"
      },
      "cell_type": "code",
      "source": [
        "a = [1, 2, 3]\n",
        "\n",
        "id(a)"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "140668482739080"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 2
        }
      ]
    },
    {
      "metadata": {
        "id": "E9n0wgPIMgv_",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "id 함수는 변수가 가리키고 있는 객체의 주소를 리턴해주는 파이썬 내장함수이다.\n",
        "\n",
        "변수 a가 가리키는 [1, 2, 3] 리스트의 주소는 140668482739080이다."
      ]
    },
    {
      "metadata": {
        "id": "srC65mdqMgyY",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "# 리스트를 변수에 넣고 복사하고자 할 때\n",
        "\n",
        "\"복사\"는 혼동하기 쉽다!"
      ]
    },
    {
      "metadata": {
        "id": "8U1NKyi9Mg03",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 53
        },
        "outputId": "eefa53f4-ed2a-4bbf-dfae-c9d03917d1eb"
      },
      "cell_type": "code",
      "source": [
        "a = [1, 2, 3]\n",
        "b = a\n",
        "\n",
        "print(id(a))\n",
        "print(id(b))"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "140668482739464\n",
            "140668482739464\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "T70KLa29Mg3Y",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "변수 b에 변수 a를 대입해하였고, a와 b의 주소를 확인했다.\n",
        "\n",
        "보다시피, a와 b는 완전히 동일하다. [1, 2, 3] 리스트를 참조하는 변수의 갯수가 a와 b, 2개가 되었을 뿐이다.\n",
        "\n",
        "동일한 객체를 가리키는지 판별하는 파이썬 명령어 **is**를 사용해보자. True를 리턴할 것이다."
      ]
    },
    {
      "metadata": {
        "id": "IC1pr219Mg52",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "7015166a-ed18-4506-8571-dc6b8cc1bcdd"
      },
      "cell_type": "code",
      "source": [
        "a = [1, 2, 3]\n",
        "b = a\n",
        "\n",
        "print(a is b)"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "True\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "nDfZ9mcFMg8Y",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 53
        },
        "outputId": "c7bbdcd5-dbc1-42a1-b53f-911a5a4b9bb9"
      },
      "cell_type": "code",
      "source": [
        "a = [1, 2, 3, 4, 5]\n",
        "b = a\n",
        "\n",
        "a[2] = 100\n",
        "\n",
        "print(a)\n",
        "print(b)"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[1, 2, 100, 4, 5]\n",
            "[1, 2, 100, 4, 5]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "1TP-ut_OMg_E",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "a 리스트의 두번째 요소를 100으로 바꾸었더니 b 리스트 역시 바뀌었다. 상술하였듯, a와 b는 모두 동일한 리스트를 가리키고 있기 때문이다.\n",
        "\n",
        "**그렇다면 변수 b를 생성할 때 변수 a와 같은 값을 가지도록 복사하면서 a가 가리키는 리스트와는 다른 리스트를 가리키게 할 방법은 뭐가 있을까?**"
      ]
    },
    {
      "metadata": {
        "id": "bKwXiojfP-sf",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## 1. [:]\n",
        "\n",
        "리스트 전체를 가리키는 [:]를 이용하여 복사한다."
      ]
    },
    {
      "metadata": {
        "id": "n4_Kj-oWMhBh",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "outputId": "e1180b8a-c357-4af9-80c5-8cd5a87312c1"
      },
      "cell_type": "code",
      "source": [
        "a = [1, 2, 3, 4, 5]\n",
        "b = a[:]\n",
        "print(a)\n",
        "print(b)\n",
        "\n",
        "a[2] = 100\n",
        "print(a)\n",
        "print(b)\n",
        "\n",
        "# 당연하게도 주소값도 달라진다!\n",
        "print(id(a))\n",
        "print(id(b))\n",
        "print(a is b)"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[1, 2, 3, 4, 5]\n",
            "[1, 2, 3, 4, 5]\n",
            "[1, 2, 100, 4, 5]\n",
            "[1, 2, 3, 4, 5]\n",
            "140668482738248\n",
            "140668482739784\n",
            "False\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "1zdpeC3QMhEH",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## 2. copy 모듈 이용\n",
        "\n",
        "상세한 설명은 파이썬 모듈 파트에서 하겠다. **아래의 예 b = copy(a)는 b = a[:]과 같다!**"
      ]
    },
    {
      "metadata": {
        "id": "D0DVhT1XMhGp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "outputId": "97a07b14-ed11-4280-db80-7280aa9f8fd9"
      },
      "cell_type": "code",
      "source": [
        "from copy import copy\n",
        "\n",
        "a = [1, 2, 3, 4, 5]\n",
        "b = copy(a)\n",
        "print(a)\n",
        "print(b)\n",
        "\n",
        "a[2] = 65535\n",
        "print(a)\n",
        "print(b)\n",
        "\n",
        "\n",
        "print(id(a))\n",
        "print(id(b))\n",
        "print(b is a)"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[1, 2, 3, 4, 5]\n",
            "[1, 2, 3, 4, 5]\n",
            "[1, 2, 65535, 4, 5]\n",
            "[1, 2, 3, 4, 5]\n",
            "140668479928456\n",
            "140668482738248\n",
            "False\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "Z315nGGmMhJJ",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "# 변수를 만드는 여러가지 방법"
      ]
    },
    {
      "metadata": {
        "id": "jiYBh5vDMhLq",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "J082LbGiMhOZ",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}